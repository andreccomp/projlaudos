
package teste;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ConvertServer", targetNamespace = "http://teste/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ConvertServer {


    /**
     * 
     * @param valor
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "realToDolar", targetNamespace = "http://teste/", className = "teste.RealToDolar")
    @ResponseWrapper(localName = "realToDolarResponse", targetNamespace = "http://teste/", className = "teste.RealToDolarResponse")
    @Action(input = "http://teste/ConvertServer/realToDolarRequest", output = "http://teste/ConvertServer/realToDolarResponse")
    public double realToDolar(
        @WebParam(name = "valor", targetNamespace = "")
        double valor);

    /**
     * 
     * @param valor
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "dolarToEuro", targetNamespace = "http://teste/", className = "teste.DolarToEuro")
    @ResponseWrapper(localName = "dolarToEuroResponse", targetNamespace = "http://teste/", className = "teste.DolarToEuroResponse")
    @Action(input = "http://teste/ConvertServer/dolarToEuroRequest", output = "http://teste/ConvertServer/dolarToEuroResponse")
    public double dolarToEuro(
        @WebParam(name = "valor", targetNamespace = "")
        double valor);

    /**
     * 
     * @param valor
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "euroToReal", targetNamespace = "http://teste/", className = "teste.EuroToReal")
    @ResponseWrapper(localName = "euroToRealResponse", targetNamespace = "http://teste/", className = "teste.EuroToRealResponse")
    @Action(input = "http://teste/ConvertServer/euroToRealRequest", output = "http://teste/ConvertServer/euroToRealResponse")
    public double euroToReal(
        @WebParam(name = "valor", targetNamespace = "")
        double valor);

}
